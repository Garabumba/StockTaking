# Generated by Django 5.0.6 on 2024-06-19 18:52

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AudienceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
            ],
            options={
                'verbose_name': 'Типы аудитории',
                'verbose_name_plural': 'Типы аудитории',
            },
        ),
        migrations.CreateModel(
            name='ColorPrinting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
            ],
            options={
                'verbose_name': 'Цветность печати (принтер)',
                'verbose_name_plural': 'Цветность печати (принтер)',
            },
        ),
        migrations.CreateModel(
            name='CPUModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('cores', models.IntegerField()),
                ('threads', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Модели процессоров',
                'verbose_name_plural': 'Модели процессоров',
            },
        ),
        migrations.CreateModel(
            name='MonitorModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
            ],
            options={
                'verbose_name': 'Модели мониторов',
                'verbose_name_plural': 'Модели мониторов',
            },
        ),
        migrations.CreateModel(
            name='MotherboardModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
            ],
            options={
                'verbose_name': 'Модели материнских плат',
                'verbose_name_plural': 'Модели материнских плат',
            },
        ),
        migrations.CreateModel(
            name='OS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
            ],
            options={
                'verbose_name': 'Операционные системы',
                'verbose_name_plural': 'Операционные системы',
            },
        ),
        migrations.CreateModel(
            name='OSVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
            ],
            options={
                'verbose_name': 'Версии операционных систем',
                'verbose_name_plural': 'Версии операционных систем',
            },
        ),
        migrations.CreateModel(
            name='PrinterModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
            ],
            options={
                'verbose_name': 'Модели принтеров',
                'verbose_name_plural': 'Модели принтеров',
            },
        ),
        migrations.CreateModel(
            name='PrintType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
            ],
            options={
                'verbose_name': 'Типы печати (принтер)',
                'verbose_name_plural': 'Типы печати (принтер)',
            },
        ),
        migrations.CreateModel(
            name='ProjectorModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
            ],
            options={
                'verbose_name': 'Модели проекторов',
                'verbose_name_plural': 'Модели проекторов',
            },
        ),
        migrations.CreateModel(
            name='ProjectorType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=50)),
            ],
            options={
                'verbose_name': 'Типы проекторов',
                'verbose_name_plural': 'Типы проекторов',
            },
        ),
        migrations.CreateModel(
            name='RAMModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('memory', models.FloatField(null=True)),
            ],
            options={
                'verbose_name': 'Модели оперативной памяти',
                'verbose_name_plural': 'Модели оперативной памяти',
            },
        ),
        migrations.CreateModel(
            name='RAMType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=50)),
            ],
            options={
                'verbose_name': 'Типы оперативной памяти',
                'verbose_name_plural': 'Типы оперативной памяти',
            },
        ),
        migrations.CreateModel(
            name='Resolution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ResolutionFormat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
            ],
            options={
                'verbose_name': 'Программное обеспечение',
                'verbose_name_plural': 'Программное обеспечение',
            },
        ),
        migrations.CreateModel(
            name='SoftwareLicense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('activation_date', models.DateTimeField(default=None)),
                ('expiration_date', models.DateTimeField(default=None)),
            ],
            options={
                'verbose_name': 'Лицензии программного обеспечения',
                'verbose_name_plural': 'Лицензии программного обеспечения',
            },
        ),
        migrations.CreateModel(
            name='SoftwareType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
            ],
            options={
                'verbose_name': 'Типы программного обеспечения',
                'verbose_name_plural': 'Типы программного обеспечения',
            },
        ),
        migrations.CreateModel(
            name='StorageModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('memory', models.FloatField()),
            ],
            options={
                'verbose_name': 'Модели накопителей памяти',
                'verbose_name_plural': 'Модели накопителей памяти',
            },
        ),
        migrations.CreateModel(
            name='StorageType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=50)),
            ],
            options={
                'verbose_name': 'Типы накопителей памяти',
                'verbose_name_plural': 'Типы накопителей памяти',
            },
        ),
        migrations.CreateModel(
            name='TechniqueStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Статусы техники',
                'verbose_name_plural': 'Статусы техники',
            },
        ),
        migrations.CreateModel(
            name='TechniqueType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
            ],
            options={
                'verbose_name': 'Типы техники',
                'verbose_name_plural': 'Типы техники',
            },
        ),
        migrations.CreateModel(
            name='TVModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
            ],
            options={
                'verbose_name': 'Модели телевизоров',
                'verbose_name_plural': 'Модели телевизоров',
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('url', models.CharField(default='', max_length=1000)),
            ],
            options={
                'verbose_name': 'Университеты',
                'verbose_name_plural': 'Университеты',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
            ],
            options={
                'verbose_name': 'Производители',
                'verbose_name_plural': 'Производители',
            },
        ),
        migrations.CreateModel(
            name='VendorType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[(1, 'Материнская плата'), (2, 'Процессор'), (3, 'Накопитель памяти'), (4, 'Видеокарта'), (5, 'Оперативная память'), (6, 'Монитор'), (7, 'Программное обеспечение'), (8, 'Проектор'), (9, 'Принтер'), (10, 'Телевизор')], default='', max_length=255)),
            ],
            options={
                'verbose_name': 'Типы производителей',
                'verbose_name_plural': 'Типы производителей',
            },
        ),
        migrations.CreateModel(
            name='Audience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('state', models.JSONField(null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='home/audiences/', verbose_name='Вид сверху')),
                ('max_computers', models.IntegerField()),
                ('max_places', models.IntegerField()),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.audiencetype')),
            ],
            options={
                'verbose_name': 'Аудитории',
                'verbose_name_plural': 'Аудитории',
            },
        ),
        migrations.CreateModel(
            name='Computer',
            fields=[
                ('inventory_number', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=255)),
                ('arch', models.CharField(default='', max_length=50)),
                ('ip', models.CharField(default='', max_length=50, null=True)),
                ('update_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('audience', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='home.audience')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.techniquestatus')),
                ('technique_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.techniquetype')),
            ],
            options={
                'verbose_name': 'Компьютеры',
                'verbose_name_plural': 'Компьютеры',
            },
        ),
        migrations.CreateModel(
            name='CPU',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('frequency', models.FloatField()),
                ('is_updating', models.BooleanField(default=True)),
                ('can_installing', models.BooleanField(default=True)),
                ('computer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.computer')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.cpumodel')),
            ],
            options={
                'verbose_name': 'Процессоры',
                'verbose_name_plural': 'Процессоры',
            },
        ),
        migrations.CreateModel(
            name='CPUHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('installed_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('removed_date', models.DateTimeField(default=None, null=True)),
                ('computer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.computer')),
                ('cpu', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.cpu')),
            ],
            options={
                'verbose_name': 'История процессоров',
                'verbose_name_plural': 'История процессоров',
            },
        ),
        migrations.CreateModel(
            name='Drive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letter', models.CharField(default='', max_length=50)),
                ('total_memory', models.FloatField()),
                ('free_memory', models.FloatField()),
                ('computer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.computer')),
            ],
            options={
                'verbose_name': 'Разделы накопителей памяти',
                'verbose_name_plural': 'Разделы накопителей памяти',
            },
        ),
        migrations.CreateModel(
            name='Monitor',
            fields=[
                ('serial_number', models.CharField(default='', max_length=255, primary_key=True, serialize=False)),
                ('inventory_number', models.CharField(default='', max_length=255)),
                ('name', models.CharField(default='', max_length=255)),
                ('is_updating', models.BooleanField(default=True)),
                ('can_installing', models.BooleanField(default=True)),
                ('computer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.computer')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.monitormodel')),
                ('resolution', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.resolution')),
                ('technique_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.techniquetype')),
            ],
            options={
                'verbose_name': 'Мониторы',
                'verbose_name_plural': 'Мониторы',
            },
        ),
        migrations.CreateModel(
            name='MonitorHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('installed_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('removed_date', models.DateTimeField(default=None, null=True)),
                ('computer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.computer')),
                ('monitor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.monitor')),
            ],
            options={
                'verbose_name': 'История мониторов',
                'verbose_name_plural': 'История мониторов',
            },
        ),
        migrations.CreateModel(
            name='Motherboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('is_updating', models.BooleanField(default=True)),
                ('can_installing', models.BooleanField(default=True)),
                ('computer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.computer')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.motherboardmodel')),
            ],
            options={
                'verbose_name': 'Материнские платы',
                'verbose_name_plural': 'Материнские платы',
            },
        ),
        migrations.CreateModel(
            name='MotherboardHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('installed_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('removed_date', models.DateTimeField(default=None, null=True)),
                ('computer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.computer')),
                ('motherboard', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.motherboard')),
            ],
            options={
                'verbose_name': 'История материнских плат',
                'verbose_name_plural': 'История материнских плат',
            },
        ),
        migrations.CreateModel(
            name='OS_Computer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_key', models.CharField(max_length=100, null=True)),
                ('computer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.computer')),
                ('os', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.os')),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.osversion')),
            ],
            options={
                'verbose_name': 'Операционные системы компьютеров',
                'verbose_name_plural': 'Операционные системы компьютеров',
            },
        ),
        migrations.AddField(
            model_name='os',
            name='version',
            field=models.ManyToManyField(blank=True, related_name='OSOSVersion', to='home.osversion'),
        ),
        migrations.CreateModel(
            name='RAM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('frequency', models.FloatField()),
                ('slot', models.IntegerField()),
                ('is_updating', models.BooleanField(default=True)),
                ('can_installing', models.BooleanField(default=True)),
                ('computer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.computer')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.rammodel')),
            ],
            options={
                'verbose_name': 'Оперативная память',
                'verbose_name_plural': 'Оперативная память',
            },
        ),
        migrations.CreateModel(
            name='RAMHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('installed_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('removed_date', models.DateTimeField(default=None, null=True)),
                ('computer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.computer')),
                ('ram', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.ram')),
            ],
            options={
                'verbose_name': 'История оперативнй памяти',
                'verbose_name_plural': 'История оперативнй памяти',
            },
        ),
        migrations.AddField(
            model_name='rammodel',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.ramtype'),
        ),
        migrations.AddField(
            model_name='resolution',
            name='resolution_format',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.resolutionformat'),
        ),
        migrations.CreateModel(
            name='Software_Computer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(default='', max_length=1000, null=True)),
                ('install_date', models.DateField(null=True)),
                ('folder', models.CharField(default='', max_length=1000, null=True)),
                ('computer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.computer')),
                ('software', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='home.software')),
            ],
            options={
                'verbose_name': 'Программное обеспечение компьютеров',
                'verbose_name_plural': 'Программное обеспечение компьютеров',
            },
        ),
        migrations.AddField(
            model_name='software',
            name='computer',
            field=models.ManyToManyField(through='home.Software_Computer', to='home.computer'),
        ),
        migrations.AddField(
            model_name='software',
            name='license',
            field=models.ManyToManyField(blank=True, related_name='SoftwareLicense', to='home.softwarelicense'),
        ),
        migrations.AddField(
            model_name='software',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.softwaretype'),
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('serial_number', models.CharField(default='', max_length=255, primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=255)),
                ('is_updating', models.BooleanField(default=True)),
                ('can_installing', models.BooleanField(default=True)),
                ('computer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.computer')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.storagemodel')),
            ],
            options={
                'verbose_name': 'Накопители памяти',
                'verbose_name_plural': 'Накопители памяти',
            },
        ),
        migrations.CreateModel(
            name='StorageHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('installed_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('removed_date', models.DateTimeField(default=None, null=True)),
                ('computer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.computer')),
                ('storage', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.storage')),
            ],
            options={
                'verbose_name': 'История накопителей памяти',
                'verbose_name_plural': 'История накопителей памяти',
            },
        ),
        migrations.AddField(
            model_name='storagemodel',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.storagetype'),
        ),
        migrations.CreateModel(
            name='Projector',
            fields=[
                ('name', models.CharField(default='', max_length=255)),
                ('inventory_number', models.CharField(default='', max_length=255, primary_key=True, serialize=False)),
                ('year_of_production', models.IntegerField()),
                ('with_remote_controller', models.BooleanField()),
                ('audience', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='home.audience')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.projectormodel')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.projectortype')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.techniquestatus')),
                ('technique_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.techniquetype')),
            ],
            options={
                'verbose_name': 'Проекторы',
                'verbose_name_plural': 'Проекторы',
            },
        ),
        migrations.CreateModel(
            name='Printer',
            fields=[
                ('inventory_number', models.CharField(default='', max_length=255, primary_key=True, serialize=False)),
                ('year_of_production', models.IntegerField()),
                ('is_networking', models.BooleanField()),
                ('name', models.CharField(default='', max_length=255)),
                ('audience', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='home.audience')),
                ('color_printing', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.colorprinting')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.printermodel')),
                ('print_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.printtype')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.techniquestatus')),
                ('technique_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.techniquetype')),
            ],
            options={
                'verbose_name': 'Принтеры',
                'verbose_name_plural': 'Принтеры',
            },
        ),
        migrations.CreateModel(
            name='TV',
            fields=[
                ('inventory_number', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=255)),
                ('diagonal', models.FloatField()),
                ('year_of_production', models.IntegerField()),
                ('audience', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='home.audience')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.techniquestatus')),
                ('technique_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.techniquetype')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.tvmodel')),
            ],
            options={
                'verbose_name': 'Телевизоры',
                'verbose_name_plural': 'Телевизоры',
            },
        ),
        migrations.CreateModel(
            name='UniversityBody',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('address', models.CharField(default='', max_length=1000)),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.university')),
            ],
            options={
                'verbose_name': 'Корпуса',
                'verbose_name_plural': 'Корпуса',
            },
        ),
        migrations.AddField(
            model_name='audience',
            name='university_body',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.universitybody'),
        ),
        migrations.AddField(
            model_name='tvmodel',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.vendor'),
        ),
        migrations.AddField(
            model_name='storagemodel',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.vendor'),
        ),
        migrations.AddField(
            model_name='software',
            name='vendor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='home.vendor'),
        ),
        migrations.AddField(
            model_name='rammodel',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.vendor'),
        ),
        migrations.AddField(
            model_name='projectormodel',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.vendor'),
        ),
        migrations.AddField(
            model_name='printermodel',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.vendor'),
        ),
        migrations.AddField(
            model_name='motherboardmodel',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.vendor'),
        ),
        migrations.AddField(
            model_name='monitormodel',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.vendor'),
        ),
        migrations.AddField(
            model_name='cpumodel',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.vendor'),
        ),
        migrations.AddField(
            model_name='vendor',
            name='vendor_type',
            field=models.ManyToManyField(blank=True, related_name='Vendor_VendorType', to='home.vendortype'),
        ),
        migrations.CreateModel(
            name='Videocard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('is_updating', models.BooleanField(default=True)),
                ('can_installing', models.BooleanField(default=True)),
                ('computer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.computer')),
            ],
            options={
                'verbose_name': 'Видеокарты',
                'verbose_name_plural': 'Видеокарты',
            },
        ),
        migrations.CreateModel(
            name='VideocardHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('installed_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('removed_date', models.DateTimeField(default=None, null=True)),
                ('computer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.computer')),
                ('videocard', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.videocard')),
            ],
            options={
                'verbose_name': 'История видеокарт',
                'verbose_name_plural': 'История видеокарт',
            },
        ),
        migrations.CreateModel(
            name='VideocardModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('memory', models.FloatField()),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.vendor')),
            ],
            options={
                'verbose_name': 'Модели видеокарт',
                'verbose_name_plural': 'Модели видеокарт',
            },
        ),
        migrations.AddField(
            model_name='videocard',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.videocardmodel'),
        ),
    ]
